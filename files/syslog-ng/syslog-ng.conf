@version:3.2

# syslog-ng configuration file.
#
# This should behave pretty much like the original syslog on RedHat. But
# it could be configured a lot smarter.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#

options {
	flush_lines (0);
	time_reopen (10);
	log_fifo_size (2000);
	long_hostnames (off);
	use_dns (yes);
	use_fqdn (yes);
	create_dirs (no);
	keep_hostname (yes);
};

source s_sys {
	file ("/proc/kmsg" program_override("kernel: "));
	unix-stream ("/dev/log");
	internal();
	# udp(ip(0.0.0.0) port(514));
};

destination d_cons { file("/dev/console"); };
destination d_mesg { file("/var/log/messages"); };
destination d_auth { file("/var/log/secure"); };
destination d_mail { file("/var/log/maillog" flush_lines(10)); };
destination d_spol { file("/var/log/spooler"); };
destination d_boot { file("/var/log/boot.log"); };
destination d_cron { file("/var/log/cron"); };
destination d_kern { file("/var/log/kern"); };
destination d_mlal { usertty("*"); };

filter f_kernel     { facility(kern); };
filter f_default    { level(info..emerg) and
                        not (facility(mail)
                        or facility(authpriv) 
                        or facility(cron)); };
filter f_auth       { facility(authpriv); };
filter f_mail       { facility(mail); };
filter f_emergency  { level(emerg); };
filter f_news       { facility(uucp) or
                        (facility(news) 
                        and level(crit..emerg)); };
filter f_boot   { facility(local7); };
filter f_cron   { facility(cron); };

#log { source(s_sys); filter(f_kernel); destination(d_cons); };
log { source(s_sys); filter(f_kernel); destination(d_kern); };
log { source(s_sys); filter(f_default); destination(d_mesg); };
log { source(s_sys); filter(f_auth); destination(d_auth); };
log { source(s_sys); filter(f_mail); destination(d_mail); };
log { source(s_sys); filter(f_emergency); destination(d_mlal); };
log { source(s_sys); filter(f_news); destination(d_spol); };
log { source(s_sys); filter(f_boot); destination(d_boot); };
log { source(s_sys); filter(f_cron); destination(d_cron); };

# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:

source hosts_udp { udp(ip("0.0.0.0") port(514)); }; #listen on ordinary UDP connections
source hosts_tcp { tcp(ip("0.0.0.0") port(514)); }; #listen on ordinary TCP connections

destination full_log {
  file("/zpool/$HOST/$YEAR-$MONTH/full-$YEAR-$MONTH-$DAY"
  create_dirs(yes) frac-digits(3)
  );
};

#filter esx-01 {host("esx-01.at-consulting.ru");};
#log { source(hosts_udp); filter(esx-01); destination(full_log); };

filter trm {host("trm");};
log { source(hosts_tcp); filter(trm); destination(full_log); };

filter lstore {host(lstore);};
log { source(hosts_tcp); filter(lstore); destination(full_log); };

filter ars-vm11 {host("ars-vm11.at-consulting.ru");};
log { source(hosts_udp); filter(ars-vm11); destination(full_log); };

filter intranet {host(192.168.24.155);};
log { source(hosts_udp); filter(intranet); destination(full_log); };

filter zabbix {host(zabbix);};
log { source(hosts_udp); filter(zabbix); destination(full_log); };

filter ceph-mgmt {host(192.168.10.25);};
log { source(hosts_udp); filter(ceph-mgmt); destination(full_log); };

filter vcloud {host(192.168.10.69);host(vcloud)};
log { source(hosts_tcp); filter(vcloud); destination(full_log); };
log { source(hosts_udp); filter(vcloud); destination(full_log); };




#/var/log/vpxa.log
destination vpxa_log {
  file("/zpool/$HOST/$YEAR-$MONTH/vpxa-$YEAR-$MONTH-$DAY"
  create_dirs(yes) frac-digits(3)
  template("$ISODATE $PROGRAM $MSGONLY\n")
  template_escape(no)
  );
};
filter vpxa_filter { program("Vpxa") and not message("\ verbose\ "); };
log { source(hosts_udp); filter(vpxa_filter); destination(vpxa_log); };

#/var/log/hostd.log
destination hostd_log {
  file("/zpool/$HOST/$YEAR-$MONTH/hostd-$YEAR-$MONTH-$DAY"
  create_dirs(yes) frac-digits(3)
  template("$ISODATE $PROGRAM $MSGONLY\n")
  template_escape(no)
  );
 };
filter hostd_filter { program("Hostd") };
# and not match("Power policy is unset") and not match("Responded to service state request") and not match ("Hbrsvc") and not match ("Default resource used for \'EsxHostAdvSettings") and not match ("convert IP Address of type 0") ; }; #may want to filter verbose junk in general too | Hbrsvc = host based replication service, not even enabled/used but still crapping all over the logs
log { source(hosts_udp); filter(hostd_filter); destination(hostd_log); };

#/var/log/vmkernel.log
destination vmkernel_log {
  file("/zpool/$HOST/$YEAR-$MONTH/vmkernel-$YEAR-$MONTH-$DAY"
  create_dirs(yes) frac-digits(3)
  template("$ISODATE $PROGRAM $MSGONLY\n")
  template_escape(no)
  );
 };
filter vmkernel_filter  { program("vmkernel"); };
log { source(hosts_udp); filter(vmkernel_filter); destination(vmkernel_log); };


